name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 # Update to your AWS region

      - name: Initialize Terraform
        run: terraform init

      - name: Plan Terraform changes
        run: terraform plan -var="civo_api_key=${{ secrets.CIVO_API_KEY }}" -var="civo_region=${{ secrets.CIVO_REGION }}"

      - name: Apply Terraform
        id: apply
        run: terraform apply -auto-approve -var="civo_api_key=${{ secrets.CIVO_API_KEY }}" -var="civo_region=${{ secrets.CIVO_REGION }}"

      - name: Extract Terraform output
        id: extract_output
        run: terraform output -raw kubeconfig > kubeconfig.yaml
      - name: Extract Terraform output and check kubeconfig content
        run: |
          terraform output -raw kubeconfig
      - name: Output kubeconfig.yaml for debugging
        run: cat kubeconfig.yaml

      - name: Set KUBECONFIG environment variable
        run: echo "KUBECONFIG=$GITHUB_WORKSPACE/kubeconfig.yaml" >> $GITHUB_ENV
      - name: Check KUBECONFIG environment variable
        run: echo "KUBECONFIG=$KUBECONFIG"
      - name: Output kubeconfig.yaml for debugging
        run: cat $KUBECONFIG

      - name: Create Kubernetes Namespace
        run: |
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Namespace
          metadata:
            name: forminit
          EOF
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig.yaml
